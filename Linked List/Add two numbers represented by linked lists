Given two numbers represented by two linked lists of size N and M. The task is to return a sum list. The sum list is a linked list representation of the addition of two input numbers.

Example 1:

Input:
N = 2
valueN[] = {4,5}
M = 3
valueM[] = {3,4,5}
Output: 3 9 0  
Explanation: For the given two linked
list (4 5) and (3 4 5), after adding
the two linked list resultant linked
list will be (3 9 0).

********************************************************Solution****************************************************************************

class Solution
{
    public:
    Node* reverse (Node* head) {                                       //for reversing LL
        Node* curr=head;
        Node* prev=NULL;
        Node* Next=NULL;
        while (curr!=NULL) {
            Next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=Next;
        }
        return prev;
    }
    //Function to add two numbers represented by linked list.
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {
       first = reverse (first);
       second = reverse (second);
       int c=0;
       int s=0;
       Node* temp;
       Node* res = NULL;
       Node* curr = NULL;
       while (first!=NULL or second!=NULL) {
           s = c + (first?first->data:0) + (second?second->data:0);
           c =(s>=10)?1:0;
           s = s%10;
           temp =new Node(s);
           if (res==NULL)
            res = temp;
           else
           curr->next = temp;
           curr=temp;
           if (first)
               first=first->next;
           if (second)
               second =second->next;
          
        }
        if (c>0) {
               temp=new Node(c);
               curr->next=temp;
               curr=temp;
           }
        res = reverse (res);
        return (res);
    }
};
