Given a sorted array Arr of size N and a number X, you need to find the number of occurrences of X in Arr.

Example 1:

Input:
N = 7, X = 2
Arr[] = {1, 1, 2, 2, 2, 2, 3}
Output: 4
Explanation: 2 occurs 4 times in the
given array.

****************************************************************Solution*********************************************************************************************

class Solution{
public:	

	int firstocc(int a[],int l,int h,int key) {                          // for firstocc
	    while (l<=h) {
	        int mid=l+((h-l)/2);
	        if (a[mid]>key)
	            h=mid-1;
	        else if (a[mid]<key)
	            l=mid+1;
	        else {
	            if (mid==0 or a[mid]!=a[mid-1])
	                return mid;
	            else 
	            h=mid-1;
	        }
	    } 
	    return -1;
	}
	
	int lastocc(int a[],int l,int h,int key) {                                        //for last occ
	    int n=h;
	    while (l<=h) {
	        int mid=l+((h-l)/2);
	        if (a[mid]>key)
	            h=mid-1;
	        else if (a[mid]<key)
	            l=mid+1;
	        else {
	            if (mid==n or a[mid]!=a[mid+1])
	                return mid;
	            else 
	            l=mid+1;
	        }
	    } 
	    return -1;
	}
	
	int count(int arr[], int n, int x) {                 // main function
	    int first=firstocc(arr,0,n-1,x);
	    if (first==-1)
	       return 0;
	    else 
	    return (lastocc(arr,0,n-1,x)-first+1);
	}
};
