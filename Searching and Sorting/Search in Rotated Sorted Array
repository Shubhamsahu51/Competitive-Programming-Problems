Example 1:

Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
Example 2:

Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1
Example 3:

Input: nums = [1], target = 0
Output: -1
 

Constraints:

1 <= nums.length <= 5000
-104 <= nums[i] <= 104
All values of nums are unique.
nums is guaranteed to be rotated at some pivot.
-104 <= target <= 104

****************************************************************************Solution**********************************************************************

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l=0;
        int h=nums.size()-1;
        
        while (l<=h) {
            int mid=(l+h)/2;
            if (nums[mid]==target)         //found ele
                return mid;
            if (nums[l]<nums[mid]) {             //left side sorted 
                if (target>nums[l] and target<=nums[mid])
                    h=mid-1;
                else
                    l=mid+1;
            }
            
            else {                                    //right side sorted
                if (target>nums[mid] and target<=nums[h])
                    l=mid+1;
                else
                    h=mid-1;
            }
        }
      return -1;
        }
        
};
